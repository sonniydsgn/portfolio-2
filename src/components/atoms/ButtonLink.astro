---
import type { ButtonLink } from '@/types'
type Props = ButtonLink

const { href, class: className, type = 'button', ...rest } = Astro.props
---

{
	href ? (
		<a {href} class:list={['link', className]} {...rest}>
			<slot />
		</a>
	) : (
		<button class:list={['btn-reset', className]} {type} {...rest}>
			<slot />
		</button>
	)
}

<style is:global>
	/* кнопка */
	.btn-reset {
		cursor: pointer;
		border: none;
		background-color: transparent;
		padding: 0;
		font-family: var(--ff-primary);
	}

	.btn {
		display: inline-flex;
		justify-content: center;
		align-items: center;
		gap: 4px;
		transition: transform var(--tr-primary);
		font-weight: 500;
		font-size: var(--font-sm);
		line-height: 1;
		font-family: var(--ff-secondary);
		text-transform: uppercase;
	}

	.btn:disabled {
		opacity: 0.6;
		cursor: not-allowed;
	}

	.btn--primary {
		backdrop-filter: var(--button-primary-blur);
		border: 1px solid var(--button-primary-border);
		border-radius: var(--br-md);
		background-color: var(--button-primary-bg);
		padding-inline: 16px;
		padding-block: 12px;
		color: var(--text-primary-0);

		&.btn--only-icon {
			padding: 8px;
		}

		&.btn--icon {
			--size: 16px;

			padding-inline-start: 12px;
		}

		@media (hover) {
			&:hover {
				transform: scale(1.15);
			}
		}

		&:active {
			transform: scale(0.95);
		}
	}

	.btn--secondary {
		backdrop-filter: var(--button-secondary-blur);
		border: 1px solid var(--button-secondary-border);
		border-radius: var(--br-md);
		background-color: var(--button-secondary-bg);
		padding-inline: 16px;
		padding-block: 8px;

		&.btn--only-icon {
			border-radius: 100%;
			padding: 24px;
		}

		&.btn--icon {
			--size: 16px;

			padding-inline-start: 12px;
		}

		@media (hover) {
			&:hover {
				transform: scale(1.15);
			}
		}

		&:active {
			transform: scale(0.95);
		}
	}

	/* ссылка */
	.link {
		--stroke-width: 1px;
		--stroke-color: var(--border-primary);

		transition:
			text-decoration-color 0.15s ease,
			opacity var(--tr-primary);
		text-decoration: underline;
		text-decoration-color: var(--stroke-color);
		text-decoration-thickness: var(--stroke-width, 1px);
		text-underline-position: auto;
		text-underline-offset: 0.2em;

		@media (hover) {
			&:hover {
				text-decoration-color: transparent;
			}
		}
	}

	.link--primary {
		color: var(--text-primary-0);
		font-weight: 500;
		font-size: var(--font-sm);
		line-height: var(--lh-sm);
		font-family: var(--ff-secondary);
	}
</style>
