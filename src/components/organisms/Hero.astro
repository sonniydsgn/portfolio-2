---
interface Props {
	title: string
	title_secondary?: string
	desc: string
	tag?: 'section' | 'header'
	class?: string
	centered?: boolean
}

const {
	title,
	title_secondary,
	desc,
	tag: Element = 'section',
	class: className,
	centered = false,
	...props
} = Astro.props
---

<Element class:list={['hero', { 'hero--centered': centered }, className]} {...props}>
	<div class="hero__header">
		<h1 class="text-h1 hero__title">
			{title}
			{title_secondary && <br /> <span class="text-h1 text-h1--secondary">{title_secondary}</span>}
		</h1>
		<p class="text-subtitle hero__subtitle">
			{desc}
		</p>
		<slot name="header" />
	</div>
	<slot />
</Element>

<style>
	.hero {
		display: flex;
		flex-direction: column;
		margin-block-end: 48px;

		.hero__subtitle {
			max-width: 420px;
		}

		@media (width <= 1200) {
			margin-block-end: 40px;
		}

		@media (width <= 880) {
			margin-block-end: 32px;
		}
	}

	.hero--centered {
		.hero__header {
			align-items: center;
			text-align: center;

			@media (width <= 880) {
				align-items: flex-start;
				text-align: left;
			}
		}

		.hero__subtitle {
			max-width: 750px;
		}
	}

	.hero__header {
		display: flex;
		flex-direction: column;

		@media (width <= 880) {
			padding-inline: var(--inline-padding);
		}
	}

	.hero__title {
		margin-block-end: 24px;
		max-width: 780px;

		@media (width <= 880) {
			margin-block-end: 12px;
			max-width: 600px;
		}
	}
</style>
