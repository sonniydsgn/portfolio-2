---
import type { ImageMetadata } from 'astro'
import { Icon } from 'astro-icon/components'
import { Picture } from 'astro:assets'
import type { CollectionEntry } from 'astro:content'
import Meta from '../molecules/Meta.astro'

interface Props {
	project: CollectionEntry<'projects'>
}

const { project } = Astro.props
const { color, cover, additional_image, name, desc, place_work, year } = project.data

// cover
const coverWidth = 906
const coverHeight = 598
---

<article class="project-card" style={'--cover-color: ' + '#' + color}>
	<div class="project-card__cover-container">
		{
			cover?.mp4?.length > 0 ? (
				<video
					class="project-card__cover"
					autoplay
					preload="auto"
					loop
					muted
					playsinline
					tabindex="-1"
					width={coverWidth}
					height={coverHeight}
					style={'aspect-ratio: ' + coverWidth + '/' + coverHeight}
				>
					<source src={cover.mp4} type="video/mp4" />
					<source src={cover.webm} type="video/webm" />
				</video>
			) : (
				<Picture
					class="project-card__cover"
					src={cover.img as ImageMetadata}
					alt={cover?.alt}
					formats={['avif', 'webp']}
					fetchpriority="high"
					loading="eager"
					width={coverWidth}
					height={coverHeight}
				/>
			)
		}
	</div>

	{
		additional_image && (
			<Picture
				class="project-card__add-image"
				src={additional_image.img as ImageMetadata}
				alt={additional_image?.alt}
				formats={['avif', 'webp']}
				width={additional_image.img.width}
				height={additional_image.img.height}
			/>
		)
	}

	<div class="project-card__content">
		<h2 class="text-h3-small project-card__title">
			<a href={'/projects/' + project.slug} class="project-card__link">
				{name}
			</a>
		</h2>
		<p class="project-card__description">{desc}</p>
		<div class="project-card__footer">
			<Meta
				class="project-card__meta"
				client={{ logo: place_work.logo as ImageMetadata, name: place_work.name }}
				{year}
			/>
			<div class="page-icon project-card__page-icon">
				<Icon name="arrow-right-icon" class="icon" aria-hidden="true" />
			</div>
		</div>
	</div>
</article>

<style>
	.project-card {
		display: flex;
		position: relative;
		flex-direction: column;
		border: 1px solid var(--border-secondary);
		border-radius: var(--br-xl);
		background-color: var(--bg-primary);
		padding: 24px 24px 32px;
		width: 100%;

		@media (hover) {
			&:hover {
				.project-card__cover {
					transform: scale(0.9);
				}
			}
		}

		&:active,
		&:focus-within {
			.project-card__cover {
				transform: scale(0.95);
			}
		}

		@media (width <= 880) {
			border-radius: var(--br-lg);
			padding: 8px 8px 24px;
		}
	}

	.project-card__cover-container {
		margin-block-end: 24px;
		border-radius: var(--br-primary);
		background-color: var(--cover-color);
		width: 100%;
		overflow: hidden;

		@media (width <= 880) {
			margin-block-end: 16px;
		}
	}

	.project-card__cover {
		display: flex;
		transform: scale(0.8);
		transition: transform var(--tr-md);
		background-color: var(--bg-placeholder);
		aspect-ratio: 906 / 598;
		width: 100%;
		pointer-events: none;

		@media (width <= 880) {
			transform: scale(0.9);
		}
	}

	.project-card__add-image {
		display: flex;
		position: absolute;
		right: -130px;
		bottom: 120px;
		width: min(16vw, 235px);
		pointer-events: none;

		@media (width <= 1200) {
			display: none;
		}
	}

	.project-card__content {
		display: flex;
		flex-direction: column;
		padding-inline: 8px;
	}

	.project-card__title {
		margin-block-end: 8px;
	}

	.project-card__link {
		/* prevent 300ms delay in mobile */
		touch-action: manipulation;
		color: currentcolor;

		&::after {
			position: absolute;
			inset: 0;
			content: '';
		}
	}

	.project-card__description {
		margin-block-end: 16px;
		max-width: 580px;
		/* hack for temporary disabling chrome font boosting */
		max-height: 999999px;

		@media (width <= 880) {
			max-width: 520px;
		}
	}

	.project-card__footer {
		display: flex;
		align-items: center;
		font-size: var(--font-sm);
		line-height: var(--lh-lg);
		font-family: var(--ff-secondary);
	}
</style>
